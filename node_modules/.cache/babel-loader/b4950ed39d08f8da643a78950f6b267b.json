{"ast":null,"code":"var _jsxFileName = \"/Users/juney/Documents/standingcatonsol/src/components/Home/CollapsiblePanel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport { Button } from \"@material-tailwind/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CollapsiblePanel(_ref) {\n  _s();\n\n  let {\n    children,\n    ...props\n  } = _ref;\n  const {\n    title,\n    collapse\n  } = props;\n  const [isCollapse, setIsCollapse] = useState(collapse);\n  const [icon, setIcon] = useState(\"fa fa-chevron-down\");\n\n  const toggle = () => {\n    setIsCollapse(!isCollapse);\n    setIcon(state => {\n      return state === \"fa fa-chevron-down\" ? \"fa fa-chevron-right\" : \"fa fa-chevron-down\";\n    });\n  };\n\n  const animate = collapse => {\n    setIsCollapse(collapse);\n    setIcon(state => {\n      return state === \"fa fa-chevron-down\" ? \"fa fa-chevron-right\" : \"fa fa-chevron-down\";\n    });\n  };\n\n  useEffect(() => {\n    animate(!collapse);\n  }, [collapse]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"coll-panel\",\n    children: /*#__PURE__*/_jsxDEV(Collapse, {\n      className: \"border text-left p-2\",\n      isOpen: isCollapse,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CollapsiblePanel, \"0zEU6flij0raGrxdLOdm1AdzyUM=\");\n\n_c = CollapsiblePanel;\nCollapsiblePanel.defaultProps = {\n  children: \"Add node as a child\",\n  title: \"Collapsible Panel\",\n  collapse: true\n};\nexport default CollapsiblePanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollapsiblePanel\");","map":{"version":3,"sources":["/Users/juney/Documents/standingcatonsol/src/components/Home/CollapsiblePanel.js"],"names":["React","useState","useEffect","Collapse","Button","CollapsiblePanel","children","props","title","collapse","isCollapse","setIsCollapse","icon","setIcon","toggle","state","animate","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAuB,0BAAvB;;;AAGA,SAASC,gBAAT,OAAkD;AAAA;;AAAA,MAAxB;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,GAAwB;AAChD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBF,KAA5B;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACQ,QAAD,CAA5C;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,oBAAD,CAAhC;;AACA,QAAMa,MAAM,GAAG,MAAM;AACnBH,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAG,IAAAA,OAAO,CAACE,KAAK,IAAI;AACf,aAAOA,KAAK,KAAK,oBAAV,GACH,qBADG,GAEH,oBAFJ;AAGD,KAJM,CAAP;AAKD,GAPD;;AASA,QAAMC,OAAO,GAAGP,QAAQ,IAAI;AAC1BE,IAAAA,aAAa,CAACF,QAAD,CAAb;AACAI,IAAAA,OAAO,CAACE,KAAK,IAAI;AACf,aAAOA,KAAK,KAAK,oBAAV,GACH,qBADG,GAEH,oBAFJ;AAGD,KAJM,CAAP;AAKD,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAAC,CAACP,QAAF,CAAP;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BAYE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,sBAApB;AAA2C,MAAA,MAAM,EAAEC,UAAnD;AAAA,gBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA5CQD,gB;;KAAAA,gB;AA8CTA,gBAAgB,CAACY,YAAjB,GAAgC;AAC9BX,EAAAA,QAAQ,EAAE,qBADoB;AAE9BE,EAAAA,KAAK,EAAE,mBAFuB;AAG9BC,EAAAA,QAAQ,EAAE;AAHoB,CAAhC;AAMA,eAAeJ,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Collapse } from \"reactstrap\";\nimport { Button } from \"@material-tailwind/react\";\n\n\nfunction CollapsiblePanel({ children, ...props }) {\n  const { title, collapse } = props;\n  const [isCollapse, setIsCollapse] = useState(collapse);\n  const [icon, setIcon] = useState(\"fa fa-chevron-down\");\n  const toggle = () => {\n    setIsCollapse(!isCollapse);\n    setIcon(state => {\n      return state === \"fa fa-chevron-down\"\n        ? \"fa fa-chevron-right\"\n        : \"fa fa-chevron-down\";\n    });\n  };\n\n  const animate = collapse => {\n    setIsCollapse(collapse);\n    setIcon(state => {\n      return state === \"fa fa-chevron-down\"\n        ? \"fa fa-chevron-right\"\n        : \"fa fa-chevron-down\";\n    });\n  };\n\n  useEffect(() => {\n    animate(!collapse);\n  }, [collapse]);\n\n  return (\n    <div className=\"coll-panel\">\n      {/* <button\n        // type=\"button\"\n        // className=\"coll-panel-btn btn-primary btn-block text-left\"\n        // variant=\"primary\" \n        // size=\"lg\"\n        variant=\"gradient\" \n        className=\"rounded-full\"\n        onClick={() => toggle()}\n      >\n        <i className={icon} /> {title}\n      </button> */}\n      <Collapse className=\"border text-left p-2\" isOpen={isCollapse}>\n        {children}\n      </Collapse>\n    </div>\n  );\n}\n\nCollapsiblePanel.defaultProps = {\n  children: \"Add node as a child\",\n  title: \"Collapsible Panel\",\n  collapse: true\n};\n\nexport default CollapsiblePanel;\n"]},"metadata":{},"sourceType":"module"}